{"version":3,"sources":["webpack:///./src/pages/projects.js","webpack:///./src/assets/images/logo.png"],"names":["ProjectStyles","styled","div","GridStyles","logo","activateTrue","boolParents","document","getElementsByTagName","i","length","parent","className","match","classList","add","remove","activateFalse","activateAll","Projects","projects","data","nodes","title","type","value","onClick","id","map","project","key","isEngineering","to","slug","current","image","alt","mainTitle","style","width","height","objectFit","auto","query","module","exports"],"mappings":"8FAAA,mLAOMA,EAAgBC,IAAOC,IAAV,8EAAGD,CAAH,+uBA4DbE,EAAaF,IAAOC,IAAV,2EAAGD,CAAH,mqCAgBYG,KAyD5B,SAASC,IAEP,IADA,IAAMC,EAAcC,SAASC,qBAAqB,OACzCC,EAAI,EAAGA,EAAIH,EAAYI,OAAQD,GAAK,EAAG,CAC9C,IAAME,EAASL,EAAYG,GACvBE,EAAOC,UAAUC,MAAM,cACzBF,EAAOG,UAAUC,IAAI,YAEnBJ,EAAOC,UAAUC,MAAM,aACzBF,EAAOG,UAAUE,OAAO,aAI9B,SAASC,IAEP,IADA,IAAMX,EAAcC,SAASC,qBAAqB,OACzCC,EAAI,EAAGA,EAAIH,EAAYI,OAAQD,GAAK,EAAG,CAC9C,IAAME,EAASL,EAAYG,GACvBE,EAAOC,UAAUC,MAAM,aACzBF,EAAOG,UAAUC,IAAI,YAEnBJ,EAAOC,UAAUC,MAAM,cACzBF,EAAOG,UAAUE,OAAO,aAI9B,SAASE,IAEP,IADA,IAAMZ,EAAcC,SAASC,qBAAqB,OACzCC,EAAI,EAAGA,EAAIH,EAAYI,OAAQD,GAAK,EAAG,CAC9C,IAAME,EAASL,EAAYG,GACvBE,EAAOC,UAAUC,MAAM,aACzBF,EAAOG,UAAUE,OAAO,YAEtBL,EAAOC,UAAUC,MAAM,cACzBF,EAAOG,UAAUE,OAAO,aAIf,SAASG,EAAT,GAA6B,IACpCC,EADmC,EAARC,KACXD,SAASE,MAC/B,OACE,oCACE,kBAAC,IAAD,CAAKC,MAAM,kBACX,kBAACvB,EAAD,KACE,wCACA,yBAAKY,UAAU,mBACb,4BACEY,KAAK,SACLC,MAAM,gBACNC,QAASR,EACTS,GAAG,aAEF,IACD,yBAAKf,UAAU,eAAf,QAEF,4BACEY,KAAK,SACLC,MAAM,gBACNC,QAASrB,EACTsB,GAAG,aAEF,IACD,yBAAKf,UAAU,eAAf,gBAEF,4BACEY,KAAK,SACLC,MAAM,gBACNC,QAAST,EACTU,GAAG,aAEF,IACD,yBAAKf,UAAU,eAAf,mBAGJ,kBAACT,EAAD,KACGiB,EAASQ,KAAI,SAACC,GAAD,OACZ,yBACEC,IAAKD,EAAQF,GACbf,UAAS,gBAAkBiB,EAAQE,eAEnC,kBAAC,IAAD,CAAMC,GAAIH,EAAQI,KAAKC,SACpBL,EAAQM,MACP,kBAAC,IAAD,iBACMN,EAAQM,MADd,CAEEC,IAAKP,EAAQQ,UACbC,MAAO,CACLC,MAAO,OACPC,OAAQ,QACRC,UAAW,QACXC,KAAM,aAIV,0BAAM9B,UAAU,YAElB,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,gBAAgBiB,EAAQQ,kBAMjD,yBAAKzB,UAAU,gBAMhB,IAAM+B,EAAK,c,qBCtPlBC,EAAOC,QAAU,IAA0B","file":"component---src-pages-projects-js-55a1ee6e97acf54d503a.js","sourcesContent":["import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport styled from 'styled-components';\nimport SanityImage from 'gatsby-plugin-sanity-image';\nimport SEO from '../components/SEO';\nimport logo from '../assets/images/logo.png';\n\nconst ProjectStyles = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  text-align: center;\n  padding-top: 75px;\n  background-color: var(--white);\n  h1 {\n    margin-bottom: 2rem;\n    color: rgba(83, 89, 95, 1);\n    font-size: 3.7rem;\n    text-align: center;\n    text-transform: uppercase;\n  }\n  .bottomGap {\n    padding: 0.5rem;\n    width: 100%;\n  }\n  .filterContainer {\n    text-align: center;\n    display: grid;\n    grid-template-areas: '. . . . all eng env . . . .';\n    button {\n      background: inherit;\n      box-shadow: none;\n    }\n    .filterTitle {\n      position: relative;\n      color: black;\n      font-size: 1.5rem;\n      place-self: center;\n      margin-bottom: 2rem;\n      &:hover {\n        cursor: pointer;\n      }\n      &:after {\n        content: '';\n        border-bottom: 2px solid orangered;\n        left: 50%;\n        position: absolute;\n        top: 110%;\n        transition: all 0.2s ease-in-out;\n        width: 0;\n      }\n      &:hover:after {\n        left: 0;\n        width: 100%;\n      }\n    }\n    #allFilter {\n      grid-area: all;\n    }\n    #engFilter {\n      grid-area: eng;\n    }\n    #envFilter {\n      grid-area: env;\n    }\n  }\n`;\n\nconst GridStyles = styled.div`\n  text-align: center;\n  background-color: white;\n  display: grid;\n  grid-template-columns: repeat(3, minmax(auto, 1fr));\n  grid-template-rows: auto;\n  gap: 1rem;\n  margin-left: 1rem;\n  margin-right: 1rem;\n  a {\n    text-decoration: none;\n  }\n  .noImage {\n    background-color: rgba(255, 255, 255, 0.5);\n  }\n  .imgContainer {\n    background-image: url(${logo});\n    background-position: center center;\n    background-repeat: no-repeat;\n    background-attachment: fixed;\n    background-size: contain;\n    background-color: rgba(0, 0, 0, 0.4);\n    position: relative;\n    place-self: center;\n    height: 275px;\n    width: 100%;\n    &:hover .projectTitle {\n      opacity: unset;\n      opacity: 1;\n    }\n    &:hover .hoverOverlay {\n      opacity: 0.5;\n    }\n  }\n  img {\n    display: block;\n    width: 100%;\n    height: auto;\n  }\n  .hoverOverlay {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    height: 100%;\n    width: 100%;\n    opacity: 0;\n    transition: 0.5s ease-in-out;\n    background-color: blue;\n  }\n  .projectTitle {\n    color: rgba(255, 255, 255, 1);\n    font-size: 2rem;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    -webkit-transform: translate(-50%, -50%);\n    -ms-transform: translate(-50%, -50%);\n    transform: translate(-50%, -50%);\n    text-align: center;\n  }\n  .inactive {\n    display: none;\n  }\n  @media only screen and (max-width: 786px) {\n    grid-template-columns: repeat(2, minmax(auto, 1fr));\n  }\n  @media only screen and (max-width: 600px) {\n    grid-template-columns: repeat(1, minmax(auto, 1fr));\n  }\n`;\n\nfunction activateTrue() {\n  const boolParents = document.getElementsByTagName('div');\n  for (let i = 0; i < boolParents.length; i += 1) {\n    const parent = boolParents[i];\n    if (parent.className.match(/\\bfalse\\b/)) {\n      parent.classList.add('inactive');\n    }\n    if (parent.className.match(/\\btrue\\b/)) {\n      parent.classList.remove('inactive');\n    }\n  }\n}\nfunction activateFalse() {\n  const boolParents = document.getElementsByTagName('div');\n  for (let i = 0; i < boolParents.length; i += 1) {\n    const parent = boolParents[i];\n    if (parent.className.match(/\\btrue\\b/)) {\n      parent.classList.add('inactive');\n    }\n    if (parent.className.match(/\\bfalse\\b/)) {\n      parent.classList.remove('inactive');\n    }\n  }\n}\nfunction activateAll() {\n  const boolParents = document.getElementsByTagName('div');\n  for (let i = 0; i < boolParents.length; i += 1) {\n    const parent = boolParents[i];\n    if (parent.className.match(/\\btrue\\b/)) {\n      parent.classList.remove('inactive');\n    }\n    if (parent.className.match(/\\bfalse\\b/)) {\n      parent.classList.remove('inactive');\n    }\n  }\n}\nexport default function Projects({ data }) {\n  const projects = data.projects.nodes;\n  return (\n    <>\n      <SEO title=\"Projects Page\" />\n      <ProjectStyles>\n        <h1>Projects</h1>\n        <div className=\"filterContainer\">\n          <button\n            type=\"button\"\n            value=\"Filter Button\"\n            onClick={activateAll}\n            id=\"allFilter\"\n          >\n            {' '}\n            <div className=\"filterTitle\">All</div>\n          </button>\n          <button\n            type=\"button\"\n            value=\"Filter Button\"\n            onClick={activateTrue}\n            id=\"engFilter\"\n          >\n            {' '}\n            <div className=\"filterTitle\">Engineering</div>\n          </button>\n          <button\n            type=\"button\"\n            value=\"Filter Button\"\n            onClick={activateFalse}\n            id=\"envFilter\"\n          >\n            {' '}\n            <div className=\"filterTitle\">Environmental</div>\n          </button>\n        </div>\n        <GridStyles>\n          {projects.map((project) => (\n            <div\n              key={project.id}\n              className={`imgContainer ${project.isEngineering}`}\n            >\n              <Link to={project.slug.current}>\n                {project.image ? (\n                  <SanityImage\n                    {...project.image}\n                    alt={project.mainTitle}\n                    style={{\n                      width: '100%',\n                      height: '275px',\n                      objectFit: 'cover',\n                      auto: 'format',\n                    }}\n                  />\n                ) : (\n                  <span className=\"noImage\" />\n                )}\n                <div className=\"hoverOverlay\">\n                  <div className=\"projectTitle\">{project.mainTitle}</div>\n                </div>\n              </Link>\n            </div>\n          ))}\n        </GridStyles>\n        <div className=\"bottomGap\" />\n      </ProjectStyles>\n    </>\n  );\n}\n\nexport const query = graphql`\n  query {\n    projects: allSanityProjects {\n      nodes {\n        id\n        mainTitle\n        isEngineering\n        image {\n          ...ImageWithPreview\n        }\n        slug {\n          current\n        }\n      }\n    }\n  }\n`;\n","module.exports = __webpack_public_path__ + \"static/logo-4f82d778248192cef0ab9db3853779b4.png\";"],"sourceRoot":""}